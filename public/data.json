{
    "module-1": {
        "1": {
            "qu": "Which of the following does not contribute significantly to the operational value of a large cloud provider like AWS?",
            "ans": {
                "a": "Multiregional presence",
                "b": "Highly experienced teams of security engineers",
                "c": "Deep experience in the retail sphere",
                "d": "Metered, pay-per-use pricing"
            },
            "sol": "c. Having globally distributed infrastructure and experienced security engineers makes a provider’s infrastructure more reliable. Metered pricing makes a wider range of workloads possible."
        },
        "2": {
            "qu": "Which of the following are signs of a highly available application? (Select TWO.)",
            "ans": {
                "a": "A failure in one geographic region will trigger an automatic failover to resources in a different region.",
                "b": "Applications are protected behind multiple layers of security.",
                "c": "Virtualized hypervisor-driven systems are deployed as mandated by company policy",
                "d": "Spikes in user demand are met through automatically increasing resources."
            },
            "sol": "a, d. Security and virtualization are both important characteristics of successful cloud workloads, but neither will directly impact availability."
        },
        "3": {
            "qu": "How does the metered payment model make many benefits of cloud computing possible? (Select TWO.)",
            "ans": {
                "a": "Greater application security is now possible",
                "b": "Experiments with multiple configuration options are now cost-effective.",
                "c": "Applications are now highly scalable.",
                "d": "Full-stack applications are possible without the need to invest in capital expenses."
            },
            "sol": "b, d. Security and scalability are important cloud elements but are not related to metered pricing"
        },
        "4": {
            "qu": "Which of the following are direct benefits of server virtualization? (Select TWO.)",
            "ans": {
                "a": "Fast resource provisioning and launching",
                "b": "Efficient (high-density) use of resources",
                "c": "Greater application security",
                "d": "Elastic application designs"
            },
            "sol": "a, b. Security and elasticity are important but are not directly related to server virtualization."
        },
        "5": {
            "qu": "What is a hypervisor?",
            "ans": {
                "a": "Hardware device used to provide an interface between storage and compute modules",
                "b": "Hardware device used to provide an interface between networking and compute modules",
                "c": "Software used to log and monitor virtualized operations",
                "d": "Software used to administrate virtualized resources run on physical infrastructure"
            },
            "sol": "d. A hypervisor is software (not hardware) that administrates virtualized operations"
        },
        "6": {
            "qu": "Which of the following best describes server virtualization?",
            "ans": {
                "a": "“Sharding” data from multiple sources into a single virtual data store",
                "b": "Logically partitioning physical compute and storage devices into multiple smaller virtual devices",
                "c": "Aggregating physical resources spread over multiple physical devices into a single virtual device",
                "d": "Abstracting the complexity of physical infrastructure behind a simple web interface"
            },
            "sol": "b. Sharding, aggregating remote resources, and abstracting complex infrastructure can all be accomplished using virtualization techniques, but they aren’t, of themselves, virtualization."
        },
        "7": {
            "qu": "Which of the following best describes Infrastructure as a Service products?",
            "ans": {
                "a": "Services that hide infrastructure complexity behind a simple interface",
                "b": "Services that provide a service to end users through a public network",
                "c": "Services that give you direct control over underlying compute and storage resources",
                "d": "Platforms that allow developers to run their code over short periods on cloud servers"
            },
            "sol": "c. PaaS products mask complexity, SaaS products provide end-user services, and serverless architectures (like AWS Lambda) let developers run code on cloud servers."
        },
        "8": {
            "qu": "Which of the following best describes Platform as a Service products?",
            "ans": {
                "a": "Services that hide infrastructure complexity behind a simple interface",
                "b": "Platforms that allow developers to run their code over short periods on cloud servers",
                "c": "Services that give you direct control over underlying compute and storage resources",
                "d": "Services that provide a service to end users through a public network"
            },
            "sol": "a. IaaS products provide full infrastructure access, SaaS products provide end-user services, and serverless architectures (like AWS Lambda) let developers run code on cloud servers."
        },
        "9": {
            "qu": "Which of the following best describes Software as a Service products?",
            "ans": {
                "a": "Services that give you direct control over underlying compute and storage resources",
                "b": "Services that provide a service to end users through a public network",
                "c": "Services that hide infrastructure complexity behind a simple interface",
                "d": "Platforms that allow developers to run their code over short periods on cloud servers"
            },
            "sol": "b. IaaS products provide full infrastructure access, PaaS products mask complexity, and serverless architectures (like AWS Lambda) let developers run code on cloud servers."
        },
        "10": {
            "qu": "Which of the following best describes scalability?",
            "ans": {
                "a": "The ability of an application to automatically add preconfigured compute resources to meet increasing demand",
                "b": "The ability of an application to increase or decrease compute resources to match changing demand",
                "c": "The ability to more densely pack virtualized resources onto a single physical server",
                "d": "The ability to bill resource usage using a pay-per-user model"
            },
            "sol": "a. Increasing or decreasing compute resources better describes elasticity. Efficient use of virtualized resources and billing models aren’t related directly to scalability."
        },
        "11": {
            "qu": "Which of the following best describes elasticity?",
            "ans": {
                "a": "The ability to more densely pack virtualized resources onto a single physical server",
                "b": "The ability to bill resource usage using a pay-per-user model",
                "c": "The ability of an application to increase or decrease compute resources to match changing demand",
                "d": "The ability of an application to automatically add preconfigured compute resources to meet increasing demand"
            },
            "sol": "c. Preconfiguring compute instances before they’re used to scale up an application is an element of scalability rather than elasticity. Efficient use of virtualized resources and billing models aren’t related directly to elasticity."
        },
        "12": {
            "qu": "Which of the following characteristics most help AWS provide such scalable services? (Select TWO)",
            "ans": {
                "a": "The enormous number of servers it operates",
                "b": "The value of its capitalized assets",
                "c": "Its geographic reach",
                "d": "Its highly automated infrastructure administration systems"
            },
            "sol": "a, d. Capitalized assets and geographic reach are important but don’t have a direct impact on operational scalability."
        }
    },
    "module-2": {
        "1": {
            "qu": "Which of the following EC2 services can be used without charge under the Free Tier?",
            "ans": {
                "a": "Any single EC2 instance type as long as it runs for less than one hour per day",
                "b": "Any single EC2 instance type as long as it runs for less than 75 hours per month",
                "c": "A single t2.micro EC2 instance type instance for 750 hours per month",
                "d": "t2.micro EC2 instance type instances for a total of 750 hours per month"
            },
            "sol": "d. Only the t2.micro instance type is Free Tier–eligible, and any combination of t2.micro instances can be run up to a total of 750 hours per month."
        },
        "2": {
            "qu": "You want to experiment with deploying a web server on an EC2 instance. Which two of the following resources can you include to make that work while remaining within the Free Tier? (Select TWO)",
            "ans": {
                "a": "A 5 GB bucket on S3",
                "b": "A t2.micro instance type EC2 instance",
                "c": "A 30 GB solid-state Elastic Block Store (EBS) drive",
                "d": "Two 20 GB solid-state Elastic Block Store (EBS) drives"
            },
            "sol": "b, c. S3 buckets—while available in such volumes under the Free Tier—are not necessary for an EC2 instance. Since the maximum total EBS space allowed by the Free Tier is 30 GB, two 20 GB would not be covered."
        },
        "3": {
            "qu": "Which of the following usage will always be cost-free even after your account’s Free Tier has expired? (Select TWO)",
            "ans": {
                "a": "One million API calls/month on Amazon API Gateway",
                "b": "10 GB of data retrievals from Amazon Glacier per month",
                "c": "500 MB/month of free storage on the Amazon Elastic Container Registry (ECR)",
                "d": "10 custom monitoring metrics and 10 alarms on Amazon CloudWatch"
            },
            "sol": "b, d. The API calls/month and ECR free storage are available only under the Free Tier."
        },
        "4": {
            "qu": "Which of the following tools are available to ensure you won’t accidentally run past your Free Tier limit and incur unwanted costs? (Select TWO)",
            "ans": {
                "a": "Automated email alerts when activity approaches the Free Tier limits",
                "b": "The Top Free Tier Services by Usage section on the Billing & Cost Management Dashboard",
                "c": "Billing & Cost Management section on the Top Free Tier Services Dashboard",
                "d": "The Billing Preferences Dashboard"
            },
            "sol": "a, b. There is no Top Free Tier Services Dashboard or, for that matter, a Billing Preferences Dashboard."
        },
        "5": {
            "qu": "Which of the following is likely to be an accurate source of AWS pricing information?",
            "ans": {
                "a": "Wikipedia pages relating to a particular service",
                "b": "The AWS Command Line Interface (AWS CLI)",
                "c": "AWS online documentation relating to a particular service",
                "d": "The AWS Total Cost of Ownership Calculator"
            },
            "sol": "c. Wikipedia pages aren’t updated or detailed enough to be helpful in this respect. The AWS CLI isn’t likely to have much (if any) pricing information. The TCO Calculator shouldn’t be used for specific and up-to-date information about service pricing."
        },
        "6": {
            "qu": "Which of the following will probably not affect the pricing for an AWS service?",
            "ans": {
                "a": "Requests for raising the available service limit",
                "b": "AWS Region",
                "c": "The volume of data saved to an S3 bucket",
                "d": "The volume of data egress from an Amazon Glacier vault"
            },
            "sol": "a. Pricing will normally change based on the volume of service units you consume and, often, between AWS Regions."
        },
        "7": {
            "qu": "Which of the following is a limitation of the AWS Simple Monthly Calculator?",
            "ans": {
                "a": "You can calculate resource use for only one service at a time.",
                "b": "Not all AWS services are included.",
                "c": "The pricing is seldom updated and doesn’t accurately reflect current pricing.",
                "d": "You’re not able to specify specific configuration parameters."
            },
            "sol": "b. You can, in fact, calculate costs for a multiservice stack. The calculator pricing is kept up-to-date. You can specify very detailed configuration parameters."
        },
        "8": {
            "qu": "Which of the following Simple Monthly Calculator selections will likely have an impact on most other configuration choices on the page? (Select TWO)",
            "ans": {
                "a": "Calculate By Month Or Year",
                "b": "Include Multiple Organizations",
                "c": "Free Usage Tier",
                "d": "Choose Region"
            },
            "sol": "c, d. Calculate By Month Or Year is not an option, and since the calculator calculates only cost by usage, Include Multiple Organizations wouldn’t be a useful option."
        },
        "9": {
            "qu": "Which of the following is not an included parameter in the AWS Total Cost of Ownership Calculator?",
            "ans": {
                "a": "The tax implications of a cloud deployment",
                "b": "Labor costs of an on-premises deployment",
                "c": "Networking costs of an on-premises deployment",
                "d": "Electricity costs of an on-premises deployment"
            },
            "sol": "a. The calculator covers all significant costs associated with an on-premises deployment but doesn’t include local or national tax implications."
        },
        "10": {
            "qu": "Which of the following AWS Total Cost of Ownership Calculator parameters is likely to have the greatest impact on cost?",
            "ans": {
                "a": "Currency",
                "b": "AWS Region",
                "c": "Guest OS",
                "d": "Number of servers"
            },
            "sol": "d. The currency you choose to use will have little impact on price—it’s all relative, of course. The guest OS and region will make a difference, but it’s relatively minor."
        },
        "11": {
            "qu": "Which of the following AWS documentation URLs points to the page containing an up-todate list of service limits?",
            "ans": {
                "a": "https://docs.aws.amazon.com /general/latest/ gr/limits.html",
                "b": "https://docs.aws.amazon.com /general/latest/ gr/aws_service_limits.html",
                "c": "https://aws.amazon.com /general/latest/ gr/aws_service_limits.html",
                "d": "https://docs.aws.amazon.com /latest/gr/ aws_service_limits.html"
            },
            "sol": "b. The correct URL is https://docs.aws.amazon.com/ general/latest/gr/ aws_service_limits.html."
        },
        "12": {
            "qu": "Which of the following best describes one possible reason for AWS service limits?",
            "ans": {
                "a": "To prevent individual customers from accidentally launching a crippling level of resource consumption",
                "b": "To more equally distribute available resources between customers from different regions",
                "c": "To allow customers to more gradually increase their deployments",
                "d": "Because there are logical limits to the ability of AWS resources to scale upward"
            },
            "sol": "a. Resource limits exist only within individual regions; the limits in one region don’t impact another. There’s no logistical reason that customers can’t scale up deployments at any rate. There are, in fact, no logical limits to the ability of AWS resources to scale upward."
        },
        "13": {
            "qu": "Is it always possible to request service limit increases from AWS?",
            "ans": {
                "a": "Yes. All service limits can be increased.",
                "b": "No. A limit can never be increased.",
                "c": "Service limits are defaults. They can be increased or decreased on demand.",
                "d": "No. Some service limits are hard."
            },
            "sol": "d. While most service limits are soft and can be raised on request, there are some service limits that are absolute."
        },
        "14": {
            "qu": "Which is the best place to get a quick summary of this month’s spend for your account?",
            "ans": {
                "a": "Budgets",
                "b": "Cost Explorer",
                "c": "Cost and usage reports",
                "d": "Billing & Cost Management Dashboard"
            },
            "sol": "d. The Cost Explorer and Cost and Usage Reports pages provide more in-depth and/or customized details. Budgets allow you to set alerts based on usage."
        },
        "15": {
            "qu": "What is the main goal for creating a Usage budget type (in AWS Budgets)?",
            "ans": {
                "a": "To correlate usage per unit cost to understand your account cost efficiency",
                "b": "To track the status of any active reserved instances on your account",
                "c": "To track particular categories of resource consumption",
                "d": "To monitor costs being incurred against your account"
            },
            "sol": "c. Reservation budgets track the status of any active reserved instances on your account. Cost budgets monitor costs being incurred against your account. There is no budget type that correlates usage per unit cost to understand your account cost efficiency"
        },
        "16": {
            "qu": "Which of the following is not a setting you can configure in a Cost budget?",
            "ans": {
                "a": "Period (monthly, quarterly, etc.)",
                "b": "Instance type",
                "c": "Start and stop dates",
                "d": "Owner (username of resource owner)"
            },
            "sol": "d. You can configure the period, instance type, and start/stop dates for a budget, but you can’t filter by resource owner."
        },
        "17": {
            "qu": "What is the main difference between the goals of Cost Explorer and of cost and usage reports?",
            "ans": {
                "a": "Cost Explorer displays visualizations of high-level historical and current account costs, while cost and usage reports generate granular usage reports in CSV format.",
                "b": "Cost and usage reports display visualizations of high-level historical and current account costs, while Cost Explorer generates granular usage reports in CSV format.",
                "c": "Cost Explorer lets you set alerts that are triggered by billing events, while cost and usage reports help you visualize system events.",
                "d": "Cost and usage reports are meant to alert you to malicious intrusions, while Cost Explorer displays visualizations of high-level historical and current account costs."
            },
            "sol": "a. Billing events aren’t triggers for alerts. Nothing in this chapter discusses intrusion events."
        },
        "18": {
            "qu": "What is the purpose of cost allocation tags?",
            "ans": {
                "a": "To associate spend limits to automatically trigger resource shutdowns when necessary",
                "b": "To help you identify the purpose and owner of a particular running resource to better understand and control deployments",
                "c": "To help you identify resources for the purpose of tracking your account spending",
                "d": "To visually associate account events with billing periods"
            },
            "sol": "c. Tags are passive, so they can’t automatically trigger anything. Resource tags—not cost allocation tags—are meant to help you understand and control deployments. Tags aren’t associated with particular billing periods."
        },
        "19": {
            "qu": "Which of the following scenarios would be a good use case for AWS Organizations? (Select TWO)",
            "ans": {
                "a": "A single company with multiple AWS accounts that wants a single place to administrate everything",
                "b": "An organization that provides AWS access to large teams of its developers and admins",
                "c": "A company that’s integrated some operations with an upstream vendor",
                "d": "A company with two distinct operational units, each with its own accounting system and AWS account"
            },
            "sol": "a, c. Companies with multiple users of resources in a single AWS account would not benefit from AWS Organizations, nor would a company with completely separated units. The value of AWS Organizations is in integrating the administration of related accounts."
        },
        "20": {
            "qu": "Which of these tools lets you design graphs within the browser interface to track your account spending?",
            "ans": {
                "a": "Budgets",
                "b": "Cost Explorer",
                "c": "Reports",
                "d": "Consolidating Billing"
            },
            "sol": "b. Budgets are used to set alerts. Reports provide CSV-formatted data for offline processing. Consolidated Billing (now migrated to AWS Organizations) is for administrating resources across multiple AWS accounts."
        }
    },
    "module-3": {
        "1": {
            "qu": "Which of the following designations would refer to the AWS US West (Oregon) region?",
            "ans": {
                "a": "us-east-1",
                "b": "us-west-2",
                "c": "us-west-2a",
                "d": "us-west-2b"
            },
            "sol": "b. The letter (a, b...) at the end of a designation indicates an Availability Zone. us-east-1 would never be used for a Region in the western part of the United States."
        },
        "2": {
            "qu": "Which of the following is an AWS Region for which customer access is restricted?",
            "ans": {
                "a": "AWS Admin",
                "b": "US-DOD",
                "c": "Asia Pacific (Tokyo)",
                "d": "AWS GovCloud"
            },
            "sol": "d. The AWS GovCloud Region is restricted to authorized customers only. Asia Pacific (Tokyo) is a normal Region. AWS Admin and US-DOD don’t exist (as far as we know, at any rate)."
        },
        "3": {
            "qu": "When you request a new virtual machine instance in EC2, your instance will automatically launch into the currently selected value of which of the following?",
            "ans": {
                "a": "Service",
                "b": "Subnet",
                "c": "Availability Zone",
                "d": "Region"
            },
            "sol": "d. EC2 instances will automatically launch into the Region you currently have selected. You can manually select the subnet that’s associated with a particular Availability Zone for your new EC2 instance, but there’s no default choice."
        },
        "4": {
            "qu": "Which of the following are not globally based AWS services? (Select TWO.)",
            "ans": {
                "a": "RDS",
                "b": "Route 53",
                "c": "EC2",
                "d": "CloudFront"
            },
            "sol": "b, d. Relational Database Service (RDS) and EC2 both use resources that can exist in only one Region. Route 53 and CloudFront are truly global services in that they’re not located in or restricted to any single AWS Region."
        },
        "5": {
            "qu": "Which of the following would be a valid endpoint your developers could use to access a particular Relational Database Service instance you’re running in the Northern Virginia region?",
            "ans": {
                "a": "us-east-1.amazonaws.com.rds",
                "b": "ecs.eu-west-3.amazonaws.com",
                "c": "rds.us-east-1.amazonaws.com",
                "d": "rds.amazonaws.com.us-east-1"
            },
            "sol": "c. The correct syntax for an endpoint is <service-designation>.<region-designation>.amazonaws.com—meaning, in this case, rds.us-east-1.amazonaws.com."
        },
        "6": {
            "qu": "What are the most significant architectural benefits of the way AWS designed its regions? (Select TWO.)",
            "ans": {
                "a": "It can make infrastructure more fault tolerant.",
                "b": "It can make applications available to end users with lower latency.",
                "c": "It can make applications more compliant with local regulations.",
                "d": "It can bring down the price of running."
            },
            "sol": "b, c. For most uses, distributing your application infrastructure between multiple AZs within a single Region gives them sufficient fault tolerance. While AWS services do enjoy a significant economy of scale—bring prices down—little of that is due to the structure of their Regions. Lower latency and compliance are the biggest benefits from this list."
        },
        "7": {
            "qu": "Why is it that most AWS resources are tied to a single region?",
            "ans": {
                "a": "Because those resources are run on a physical device, and that device must live somewhere.",
                "b": "Because security considerations are best served by restricting access to a single physical location.",
                "c": "Because access to any one digital resource must always occur through a single physical gateway.",
                "d": "Because spreading them too far afield would introduce latency issues."
            },
            "sol": "a. Sharing a single resource among Regions wouldn’t cause any particular security, networking, or latency problems. It’s a simple matter of finding a single physical host device to run on."
        },
        "8": {
            "qu": "You want to improve the resilience of your EC2 web server. Which of the following is the most effective and efficient approach?",
            "ans": {
                "a": "Launch parallel, load-balanced instances in multiple AWS Regions.",
                "b": "Launch parallel, load-balanced instances in multiple Availability Zones within a single AWS Region.",
                "c": "Launch parallel, autoscaled instances in multiple AWS Regions.",
                "d": "Launch parallel, autoscaled instances in multiple Availability Zones within a single AWS Region."
            },
            "sol": "b. Auto Scaling is an important working element of application high availability, but it’s not what most directly drives it (that’s load balancing). The most effective and efficient way to get the job done is through parallel, load-balanced instances in multiple Availability Zones, not Regions."
        },
        "9": {
            "qu": "Which of the following is the most accurate description of an AWS Availability Zone?",
            "ans": {
                "a": "One or more independently powered data centers running a wide range of hardware host types.",
                "b": "One or more independently powered data centers running a uniform hardware host type.",
                "c": "All the data centers located within a broad geographic area.",
                "d": "The infrastructure running within a single physical data center."
            },
            "sol": "a. “Data centers running uniform host types” would describe an edge location. The data centers within a “broad geographic area” would more closely describe an AWS Region. AZs aren’t restricted to a single data center."
        },
        "10": {
            "qu": "Which of the following most accurately describes a subnet within the AWS ecosystem?",
            "ans": {
                "a": "The virtual limits imposed on the network access permitted to a resource instance.",
                "b": "The block of IP addresses assigned for use within a single region.",
                "c": "The block of IP addresses assigned for use within a single Availability Zone.",
                "d": "The networking hardware used within a single Availability Zone."
            },
            "sol": "c. Imposing virtual networking limits on an instance would be the job of a security group or access control list. IP address blocks are not assigned at the Region level. Customers have no access to or control over AWS networking hardware."
        },
        "11": {
            "qu": "What determines the order by which subnets/AZ options are displayed in EC2 configuration dialogs?",
            "ans": {
                "a": "Alphabetical order.",
                "b": "They (appear) to be displayed in random order.",
                "c": "Numerical order.",
                "d": "By order of capacity, with largest capacity first."
            },
            "sol": "b. AWS displays AZs in (apparently) random order to prevent too many resources from being launched in too few zones."
        },
        "12": {
            "qu": "What is the primary goal of autoscaling?",
            "ans": {
                "a": "To ensure the long-term reliability of a particular physical resource.",
                "b": "To ensure the long-term reliability of a particular virtual resource.",
                "c": "To orchestrate the use of multiple parallel resources to direct incoming user requests.",
                "d": "To ensure that a predefined service level is maintained regardless of external demand or instance failures."
            },
            "sol": "d. Auto Scaling doesn’t focus on any one resource (physical or virtual) because it’s interested only in the appropriate availability and quality of the overall service. The job of orchestration is for load balancers, not autoscalers."
        },
        "13": {
            "qu": "Which of the following design strategies is most effective for maintaining the reliability of a cloud application?",
            "ans": {
                "a": "Resource isolation",
                "b": "Resource automation",
                "c": "Resource redundancy",
                "d": "Resource geolocation"
            },
            "sol": "c. Resource isolation can play an important role in security, but not reliability. Automation can improve administration processes, but neither it, nor geolocation, is the most effective reliability strategy."
        },
        "14": {
            "qu": "Which of the following AWS services are not likely to benefit from Amazon edge locations? (Select TWO.)",
            "ans": {
                "a": "RDS",
                "b": "EC2 load balancers",
                "c": "Elastic Block Store (EBS)",
                "d": "CloudFront"
            },
            "sol": "a, c. RDS database instances and Lambda functions are not qualified CloudFront origins. EC2 load balancers can be used as CloudFront origins."
        },
        "15": {
            "qu": "Which of the following is the primary benefit of using CloudFront distributions?",
            "ans": {
                "a": "Automated protection from mass email campaigns.",
                "b": "Greater availability through redundancy.",
                "c": "Greater security through data encryption.",
                "d": "Reduced latency access to your content no matter where your end users live."
            },
            "sol": "d. CloudFront can’t protect against spam and, while it can complement your application’s existing redundancy and encryption, those aren’t its primary purpose."
        },
        "16": {
            "qu": "What is the main purpose of Amazon Route 53?",
            "ans": {
                "a": "Countering the threat of distributed denial-of-service (DDoS) attacks.",
                "b": "Managing domain name registration and traffic routing.",
                "c": "Protecting web applications from web-based threats.",
                "d": "Using the serverless power of Lambda to customize CloudFront behavior."
            },
            "sol": "b. Countering the threat of DDoS attacks is the job of AWS Shield. Protecting web applications from web-based threats is done by AWS Web Application Firewall. Using Lambda to customize CloudFront behavior is for Lambda Edge."
        },
        "17": {
            "qu": "According to the AWS Shared Responsibility Model, which of the following are responsibilities of AWS? (Select TWO).",
            "ans": {
                "a": "The security of the cloud.",
                "b": "Patching underlying virtualization software running in AWS data centers.",
                "c": "Security of what’s in the cloud.",
                "d": "Patching OSs running on EC2 instances."
            },
            "sol": "a, b. What’s in the cloud is your responsibility—it includes the administration of EC2-based operating systems."
        },
        "18": {
            "qu": "According to the AWS Shared Responsibility Model, what’s the best way to define the status of the software driving an AWS managed service?",
            "ans": {
                "a": "Everything associated with an AWS managed service is the responsibility of AWS.",
                "b": "Whatever is added by the customer (like application code) is the customer’s responsibility.",
                "c": "Whatever the customer can control (application code and/or configuration settings) is the customer’s responsibility.",
                "d": "Everything associated with an AWS managed service is the responsibility of the customer."
            },
            "sol": "c. There’s no one easy answer, as some managed services are pretty much entirely within Amazon’s sphere, and others leave lots of responsibility with the customer. Remember, “if you can edit it, you own it.”"
        },
        "19": {
            "qu": "Which of the following is one of the first places you should look when troubleshooting a failing application?",
            "ans": {
                "a": "AWS Acceptable Use Monitor",
                "b": "Service Status Dashboard",
                "c": "AAWS Billing Dashboard",
                "d": "Service Health Dashboard"
            },
            "sol": "d. The AWS Billing Dashboard is focused on your account billing issues. Neither the AWS Acceptable Use Monitor nor the Service Status Dashboard actually exists. But nice try."
        },
        "20": {
            "qu": "Where will you find information on the limits AWS imposes on the ways you can use your account resources?",
            "ans": {
                "a": "AWS User Agreement Policy",
                "b": "AWS Acceptable Use Policy",
                "c": "AWS Acceptable Use Monitor",
                "d": "AWS Acceptable Use Dashboard"
            },
            "sol": "b. The correct document (and web page https://aws.amazon.com/aup/) for this information is the AWS Acceptable Use Policy."
        }
    },
    "module-4": {
        "1": {
            "qu": "What is the primary function of the AWS IAM service?",
            "ans": {
                "a": "Identity and access management",
                "b": "Access key management",
                "c": "SSH key pair management",
                "d": "Federated access management"
            },
            "sol": "a. Identity and Access Management (IAM) is primarily focused on helping you control access to your AWS resources. KMS handles access keys. EC2 manages SSH key pairs. While IAM does touch on federated management, that’s not its primary purpose."
        },
        "2": {
            "qu": "Which of the following are requirements you can include in an IAM password policy? (Select THREE.)",
            "ans": {
                "a": "Require at least one uppercase letter.",
                "b": "Require at least one number.",
                "c": "Require at least one space or null character",
                "d": "Require at least one nonalphanumeric character"
            },
            "sol": "a, b, d. . Including a space or null character is not a password policy option."
        },
        "3": {
            "qu": "Which of the following should you do to secure your AWS root user? (Select TWO.)",
            "ans": {
                "a": "Assign the root user to the “admins” IAM group.",
                "b": "Use the root user for day-to-day administration tasks",
                "c": "Enable MFA.",
                "d": "Create a strong password."
            },
            "sol": "c, d. The root user should not be used for day-to-day admin tasks—even as part of an “admin” group. The goal is to protect root as much as possible."
        },
        "4": {
            "qu": "How does multi-factor authentication work?",
            "ans": {
                "a": "Instead of an access password, users authenticate via a physical MFA device.",
                "b": "In addition to an access password, users also authenticate via a physical MFA device.",
                "c": "Users authenticate using tokens sent to at least two MFA devices.",
                "d": "Users authenticate using a password and also either a physical or virtual MFA device."
            },
            "sol": "d. MFA requires at least two (“multi”) authentication methods. Those will normally include a password (something you know) and a token sent to either a virtual or physical MFA device (something you have)."
        },
        "5": {
            "qu": "Which of the following SSH commands will successfully connect to an EC2 Amazon Linux instance with an IP address of 54.7.35.103 using a key named mykey.pem?",
            "ans": {
                "a": "echo 'mykey.pem ubuntu@54.7.35.103' | ssh -i",
                "b": "ssh -i mykey.pem ec2-user@54.7.35.103",
                "c": "ssh -i mykey.pem@54.7.35.103",
                "d": "ssh ec2-user@mykey.pem:54.7.35.103 -i"
            },
            "sol": "b. The -i argument should point to the name (and location) of the key stored on the local (client) machine. By default, the admin user on an Amazon Linux instance is named ec2-user."
        },
        "6": {
            "qu": "What’s the most efficient method for managing permissions for multiple IAM users?",
            "ans": {
                "a": "Assign users requiring similar permissions to IAM roles.",
                "b": "Assign users requiring similar permissions to IAM groups.",
                "c": "Assign IAM users permissions common to others with similar administration responsibilities",
                "d": "Create roles based on IAM policies, and assign them to IAM users."
            },
            "sol": "b. While assigning permissions and policy-based roles will work, it’s not nearly as efficient as using groups, where you need to set or update permissions only once for multiple users."
        },
        "7": {
            "qu": "What is an IAM role?",
            "ans": {
                "a": "A set of permissions allowing access to specified AWS resources",
                "b": "A set of IAM users given permission to access specified AWS resources",
                "c": "Permissions granted a trusted entity over specified AWS resources",
                "d": "Permissions granted an IAM user over specified AWS resources"
            },
            "sol": "b. An IAM role is meant to be assigned to a trusted entity (like another AWS service or a federated identity). A “set of permissions” could refer to a policy. A set of IAM users could describe a group."
        },
        "8": {
            "qu": "How can federated identities be incorporated into AWS workflows? (Select TWO)",
            "ans": {
                "a": "You can provide users authenticated through a third-party identity provider access to backend resources used by your mobile app.",
                "b": "You can use identities to guide your infrastructure design decisions.",
                "c": "You can use authenticated identities to import external data (like email records from Gmail) into AWS databases.",
                "d": "You can provide admins authenticated through AWS Microsoft AD with access to a Microsoft SharePoint farm running on AWS."
            },
            "sol": "a, d. Federated identities are for permitting authenticated entities access to AWS resources and data. They’re not for importing anything from external accounts—neither data nor guidance."
        },
        "9": {
            "qu": "Which of the following are valid third-party federated identity standards? (Select TWO)",
            "ans": {
                "a": "Secure Shell",
                "b": "SSO",
                "c": "SAML 2.0",
                "d": "Active Directory"
            },
            "sol": "c, d. Secure Shell (SSH) is an encrypted remote connectivity protocol, and SSO (single sign-on) is an interface feature—neither is a standard for federated identities."
        },
        "10": {
            "qu": "What information does the IAM credential report provide?",
            "ans": {
                "a": "A record of API requests against your account resources",
                "b": "A record of failed password account login attempts",
                "c": "The current state of your account security settings",
                "d": "The current state of security of your IAM users’ access credentials"
            },
            "sol": "d. The credential report focuses only on your users’ passwords, access keys, and MFA status. It doesn’t cover actual activities or general security settings."
        },
        "11": {
            "qu": "What text format does the credential report use?",
            "ans": {
                "a": "JSON",
                "b": "CSV",
                "c": "ASCII",
                "d": "XML"
            },
            "sol": "b. The credential report is saved to the comma-separated values (spreadsheet) format"
        },
        "12": {
            "qu": ". Which of the following IAM policies is the best choice for the admin user you create in order to replace the root user for day-to-day administration tasks?",
            "ans": {
                "a": "AdministratorAccess",
                "b": "AmazonS3FullAccess",
                "c": "AmazonEC2FullAccess",
                "d": "AdminAccess"
            },
            "sol": "a. Your admin user will need broad access to be effective, so AmazonS3FullAccess and AmazonEC2FullAccess—which open up only S3 and EC2, respectively—won’t be enough. There is no AdminAccess policy."
        },
        "13": {
            "qu": "What will you need to provide for a new IAM user you’re creating who will use “programmatic access” to AWS resources?",
            "ans": {
                "a": "A password",
                "b": "A password and MFA",
                "c": "An access key ID",
                "d": "An access key ID and secret access key"
            },
            "sol": "d. “Programmatic access” users don’t sign in through the AWS Management Console; they access through APIs or the AWS CLI. They would therefore not need passwords or MFA. An access key ID alone without a matching secret access key is worthless."
        },
        "14": {
            "qu": "What will IAM users with AWS Management Console access need to successfully log in?",
            "ans": {
                "a": "Their username, account_number, and a password",
                "b": "Their username and password",
                "c": "Their account number and secret access key",
                "d": "Their username, password, and secret access key"
            },
            "sol": "b. When the correct login page (such as https://291976716973.signin.aws.amazon .com/console) is loaded, an IAM user only needs to enter a username and a valid password. Account numbers and secret access keys are not used for this kind of authentication."
        },
        "15": {
            "qu": "Which of the following will encrypt your data while in transit between your office and Amazon S3?",
            "ans": {
                "a": "DynamoDB",
                "b": "SSE-S3",
                "c": "A client-side master key",
                "d": "SSE-KMS"
            },
            "sol": "In-transit encryption requires that the data be encrypted on the remote client before uploading. Server-side encryption (either SSE-S3 or SSE-KMS) only encrypts data within S3 buckets. DynamoDB is a NoSQL database service."
        },
        "16": {
            "qu": "Which of the following AWS resources cannot be encrypted using KMS?",
            "ans": {
                "a": "Existing AWS Elastic Block Store volumes",
                "b": "RDS databases",
                "c": "S3 buckets",
                "d": "DynamoDB databases"
            },
            "sol": "a. You can only encrypt an EBS volume at creation, not later."
        },
        "17": {
            "qu": "What does KMS use to encrypt objects stored on your AWS account?",
            "ans": {
                "a": "SSH master key",
                "b": "KMS master key",
                "c": "Client-side master key",
                "d": "Customer master key"
            },
            "sol": "d. A client-side master key is used to encrypt objects before they reach AWS (specifically S3). There are no keys commonly known as either SSH or KMS master keys."
        },
        "18": {
            "qu": "Which of the following standards governs AWS-based applications processing credit card transactions?",
            "ans": {
                "a": "SSE-KMS",
                "b": "FedRAMP",
                "c": "PCI DSS",
                "d": "ARPA"
            },
            "sol": "c. SSE-KMS are KMS-managed server-side keys. FedRAMP is the U.S. government’s Federal Risk and Authorization Management Program (within which transaction data protection plays only a relatively minor role). ARPA is the Australian Prudential Regulation Authority."
        },
        "19": {
            "qu": "What is the purpose of the Service Organization Controls (SOC) reports found on AWS Artifact?",
            "ans": {
                "a": "They can be used to help you design secure and reliable credit card transaction applications.",
                "b": "They attest to AWS infrastructure compliance with data accountability standards like Sarbanes–Oxley",
                "c": "They guarantee that all AWS-based applications are, by default, compliant with Sarbanes–Oxley standards.",
                "d": "They’re an official, ongoing risk-assessment profiler for AWS-based deployments."
            },
            "sol": "b. SOC isn’t primarily about guidance or risk assessment, and it’s definitely not a guarantee of the state of your own deployments. SOC reports are reports of audits on AWS infrastructure that you can use as part of your own reporting requirements"
        },
        "20": {
            "qu": "What role can the documents provided by AWS Artifact play in your application planning? (Select TWO)",
            "ans": {
                "a": "They can help you confirm that your deployment infrastructure is compliant with regulatory standards",
                "b": "They can provide insight into various regulatory and industry standards that represent best practices.",
                "c": "They can provide insight into the networking and storage design patterns your AWS applications use.",
                "d": "They represent AWS infrastructure design policy"
            },
            "sol": "a, b. AWS Artifact documents are about AWS infrastructure compliance with external standards. They tangentially can also provide insight into best practices. They do not represent internal AWS design or policies."
        }
    },
    "module-5": {
        "1": {
            "qu": "Which of the following are true of a default VPC? (Select TWO)",
            "ans": {
                "a": "A default VPC spans multiple regions.",
                "b": "AWS creates a default VPC in each region.",
                "c": "AWS creates a default VPC in each Availability Zone.",
                "d": "By default, each default VPC is available to one AWS account."
            },
            "sol": "b, d. For each account, AWS creates a default VPC in each Region. A VPC spans all Availability Zones within a Region. VPCs do not span Regions."
        },
        "2": {
            "qu": "Which of the following is a valid CIDR for a VPC or subnet?",
            "ans": {
                "a": "10.0.0.0/28",
                "b": "10.0.0.0/29",
                "c": "10.0.0.0/8",
                "d": "10.0.0.0/15"
            },
            "sol": "a. A VPC or subnet CIDR can have a size between /16 and /28 inclusive, so 10.0.0.0/28 would be the only valid CIDR."
        },
        "3": {
            "qu": "Which of the following are true regarding subnets? (Select TWO)",
            "ans": {
                "a": "A VPC must have at least two subnets.",
                "b": "A subnet must have a CIDR that’s a subset of the CIDR of the VPC in which it resides.",
                "c": "A subnet spans one Availability Zone.",
                "d": "A subnet spans multiple Availability Zones."
            },
            "sol": "b, c. A subnet exists in only one Availability Zone, and it must have a CIDR that’s a subset of CIDR of the VPC in which it resides. There’s no requirement for a VPC to have two subnets, but it must have at least one."
        },
        "4": {
            "qu": "Which of the following is true of a new security group?",
            "ans": {
                "a": "It contains an inbound rule denying access from public IP addresses.",
                "b": "It contains an outbound rule denying access to public IP addresses.",
                "c": "It contains an outbound rule allowing access to any IP address.",
                "d": "It contains an inbound rule allowing access from any IP address."
            },
            "sol": "c. When you create a security group, it contains an outbound rule that allows access to any IP address. It doesn’t contain an inbound rule by default. Security group rules can only permit access, not deny it, so any traffic not explicitly allowed will be denied."
        },
        "5": {
            "qu": "What’s the difference between a security group and a network access control list (NACL)? (Select TWO)",
            "ans": {
                "a": "A network access control list operates at the instance level.",
                "b": "A security group operates at the instance level.",
                "c": "A security group operates at the subnet level.",
                "d": "A network access control list operates at the subnet level."
            },
            "sol": "b, d. A network access control list is a firewall that operates at the subnet level. A security group is a firewall that operates at the instance level."
        },
        "6": {
            "qu": "Which of the following is true of a VPC peering connection?",
            "ans": {
                "a": "It’s a private connection that connects more than three VPCs.",
                "b": "It’s a private connection between two VPCs.",
                "c": "It’s a public connection between two VPCs.",
                "d": "It’s a virtual private network (VPN) connection between two VPCs"
            },
            "sol": "b. A VPC peering connection is a private connection between only two VPCs. It uses the private AWS network, and not the public internet. A VPC peering connection is different than a VPN connection."
        },
        "7": {
            "qu": "What are two differences between a virtual private network (VPN) connection and a Direct Connect connection? (Select TWO)",
            "ans": {
                "a": "A Direct Connect connection offers predictable latency because it doesn’t traverse the internet.",
                "b": "A VPN connection uses the internet for transport.",
                "c": "A Direct Connect connection uses AES 128- or 256-bit encryption.",
                "d": "A VPN connection requires proprietary hardware."
            },
            "sol": "a, b. A Direct Connect link uses a dedicated link rather than the internet to provide predictable latency. Direct Connect doesn’t use encryption but provides some security by means of a private link. A VPN connection uses the internet for transport, encrypting data with AES 128- or 256-bit encryption. A VPN connection doesn’t require proprietary hardware."
        },
        "8": {
            "qu": "Which of the following are true about registering a domain name with Route 53? (Select TWO)",
            "ans": {
                "a": "The registrar you use to register a domain name determines who will host DNS for that domain.",
                "b": "You can register a domain name for a term of up to 10 years.",
                "c": "Route 53 creates a private hosted zone for the domain",
                "d": "Route 53 creates a public hosted zone for the domain."
            },
            "sol": "b, d. When you register a domain name, you can choose a term between 1 year and 10 years. If you use Route 53, it will automatically create a public hosted zone for the domain. The registrar and DNS hosting provider don’t have to be the same entity, but often are."
        },
        "9": {
            "qu": "Which of the following Route 53 routing policies can return set of randomly ordered values?",
            "ans": {
                "a": "Simple",
                "b": "Multivalue Answer",
                "c": "Failover",
                "d": "Latency"
            },
            "sol": "b. A Multivalue Answer routing policy can return a set of multiple values, sorted randomly. A simple record returns a single value. A Failover routing policy always routes users to the primary resource unless it’s down, in which case it routes users to the secondary resource. A Latency routing policy sends users to the resource in the AWS Region that provides the least latency."
        },
        "10": {
            "qu": "Which of the following Route 53 routing policies doesn’t use health checks?",
            "ans": {
                "a": "Latency",
                "b": "Multivalue Answer",
                "c": "Simple",
                "d": "Geolocation"
            },
            "sol": "c. All Route 53 routing policies except for Simple can use health checks."
        },
        "11": {
            "qu": "Which of the following types of Route 53 health checks works by making a test connection to a TCP port?",
            "ans": {
                "a": "Simple",
                "b": "CloudWatch alarm",
                "c": "Endpoint",
                "d": "Calculated"
            },
            "sol": "c. An Endpoint health check works by connecting to the monitored endpoint via HTTP, HTTPS, or TCP. A CloudWatch alarm health check simply reflects the status of a CloudWatch alarm. A Calculated health check derives its status from multiple other health checks. There is no such thing as a Simple health check."
        },
        "12": {
            "qu": "You have two EC2 instances hosting a web application. You want to distribute 20 percent of traffic to one instance and 80 percent to the other. Which of the following Route 53 routing policies should you use?",
            "ans": {
                "a": "Weighted",
                "b": "Failover",
                "c": "Multivalue Answer",
                "d": "Simple"
            },
            "sol": "a. A Weighted routing policy lets you distribute traffic to endpoints according to a ratio that you define. None of the other routing policies allows this."
        },
        "13": {
            "qu": "Resources in a VPC need to be able to resolve internal IP addresses for other resources in the VPC. No one outside of the VPC should be able to resolve these addresses. Which of the following Route 53 resources can help you achieve this?",
            "ans": {
                "a": "A public hosted zone",
                "b": "A private hosted zone",
                "c": "Domain name registration",
                "d": "Health checks"
            },
            "sol": "b. A private hosted zone is associated with a VPC and allows resources in the VPC to resolve private domain names. A public hosted zone is accessible by anyone on the internet. Domain name registration is for public domain names. Health checks aren’t necessary for name resolution to work."
        },
        "14": {
            "qu": "You want to provide private name resolution for two VPCs using the domain name company.pri. How many private hosted zones do you need to create?",
            "ans": {
                "a": "1",
                "b": "2",
                "c": "3",
                "d": "4"
            },
            "sol": "a. Route 53 private hosted zones provide DNS resolution for a single domain name within multiple VPCs. Therefore, to support resolution of one domain names for two VPCs, you’d need one private hosted zone."
        },
        "15": {
            "qu": "On how many continents are CloudFront edge locations distributed?",
            "ans": {
                "a": "7",
                "b": "6",
                "c": "5",
                "d": "4"
            },
            "sol": "b. CloudFront has edge locations on six continents (Antarctica is a hard place to get to)."
        },
        "16": {
            "qu": "From where does CloudFront retrieve content to store for caching?",
            "ans": {
                "a": "Regions",
                "b": "Origins",
                "c": "Distributions",
                "d": "Edge locations"
            },
            "sol": "b. A CloudFront origin is the location that a distribution sources content from. Content is stored in edge locations. A distribution defines the edge locations and origins to use."
        },
        "17": {
            "qu": "Which CloudFront distribution type requires you to provide a media player?",
            "ans": {
                "a": "Streaming",
                "b": "RTMP",
                "c": "Web",
                "d": "Edge"
            },
            "sol": "b. The RTMP distribution type is for delivering streaming content and requires you to provide a media player. A Web distribution can also stream audio or video content but doesn’t require you to provide a media player. Streaming and Edge are not distribution types."
        },
        "18": {
            "qu": "You need to deliver content to users in the United States and Canada. Which of the following edge location options will be the most cost effective for your CloudFront distribution?",
            "ans": {
                "a": "United States, Canada, and Europe",
                "b": "United States, Canada, Europe, and Asia",
                "c": "United States, Canada, Europe, Asia, and Africa",
                "d": "All edge locations"
            },
            "sol": "a. The more edge locations you use for a distribution, the more you’ll pay. Selecting the minimum number of locations will be the most cost effective."
        },
        "19": {
            "qu": "Approximately how many different CloudFront edge locations are there?",
            "ans": {
                "a": "About 50",
                "b": "More than 150",
                "c": "More than 300",
                "d": "More than 500"
            },
            "sol": "b. There are more than 150 edge locations throughout the world."
        },
        "20": {
            "qu": "Which of the following are valid origins for a CloudFront distribution? (Select TWO)",
            "ans": {
                "a": "EC2 instance",
                "b": "A public S3 bucket",
                "c": "A private S3 bucket that you don’t have access to",
                "d": "A private S3 bucket that you own"
            },
            "sol": "a, b. An origin can be an EC2 instance or a public S3 bucket. You can’t use a private S3 bucket as an origin."
        }
    },
    "module-6": {
        "1": {
            "qu": "What is the function of an EC2 AMI?",
            "ans": {
                "a": "To define the hardware profile used by an EC2 instance",
                "b": "To serve as an instance storage volume for high-volume data processing operations",
                "c": "To serve as a source image from which an instance’s primary storage volume is built",
                "d": "To define the way data streams are managed by EC2 instances"
            },
            "sol": "c. An instance’s hardware profile is defined by the instance type. High-volume (or lowvolume) data processing operations and data streams can be handled using any storage volume or on any instance (although some may be better optimized than others)."
        },
        "2": {
            "qu": "Where can you find a wide range of verified AMIs from both AWS and third-party vendors?",
            "ans": {
                "a": "AWS Marketplace",
                "b": "Quick Start",
                "c": "Community AMIs",
                "d": "My AMIs"
            },
            "sol": "a. The Quick Start includes only the few dozen most popular AMIs. The Community tab includes thousands of publicly available AMIs—whether verified or not. The My AMIs tab only includes AMIs created from your account."
        },
        "3": {
            "qu": "Which of the following could be included in an EC2 AMI? (Select TWO)",
            "ans": {
                "a": "A networking configuration",
                "b": "A software application stack",
                "c": "An operating system",
                "d": "An instance type definition"
            },
            "sol": "b, c. AMIs can be created that provide both a base operating system and a pre-installed application. They would not, however, include any networking or hardware profile information—those are largely determined by the instance type."
        },
        "4": {
            "qu": "Which of the following are EC2 instance type families? (Select TWO)",
            "ans": {
                "a": "c5d.18xlarge",
                "b": "Compute optimized",
                "c": "t2.micro",
                "d": "Accelerated computing"
            },
            "sol": "b, d. c5d.18xlarge and t2.micro are the names of EC2 instance types, not instance type families."
        },
        "5": {
            "qu": "When describing EC2 instance types, what is the role played by the vCPU metric?",
            "ans": {
                "a": "vCPUs represent an instance’s potential resilience against external network demands.",
                "b": "vCPUs represent an instance type’s system memory compared to the class of memory modules on a physical machine.",
                "c": "vCPUs represent an AMI’s processing power compared to the number of processors on a physical machine.",
                "d": "vCPUs represent an instance type’s compute power compared to the number of processors on a physical machine."
            },
            "sol": "d. A virtual central processing unit (vCPU) is a metric that roughly measures an instance type’s compute power in terms of the number of processors on a physical server. It has nothing to do with resilience to high traffic, system memory, or the underlying AMI."
        },
        "6": {
            "qu": "Which of the following describes an EC2 dedicated instance?",
            "ans": {
                "a": "An EC2 instance running on a physical host reserved for the exclusive use of a single AWS account",
                "b": "An EC2 instance running on a physical host reserved for and controlled by a single AWS account",
                "c": "An EC2 AMI that can be launched only on an instance within a single AWS account",
                "d": "An EC2 instance optimized for a particular compute role"
            },
            "sol": "a. An EC2 instance that runs on a physical host reserved for and controlled by a single AWS account is called a dedicated host. A dedicated host is not an AMI, nor is it an instance type."
        },
        "7": {
            "qu": "Which of the following describes an EBS volume?",
            "ans": {
                "a": "A software stack archive packaged to make it easy to copy and deploy to an EC2 instance",
                "b": "A virtualized partition of a physical storage drive that’s directly connected to the EC2 instance it’s associated with",
                "c": "A virtualized partition of a physical storage drive that’s not directly connected to the EC2 instance it’s associated with",
                "d": "A storage volume that’s encrypted for greater security"
            },
            "sol": "c. A virtualized partition of a physical storage drive that is directly connected to the EC2 instance it’s associated with is known as an instance store volume. A software stack archive packaged to make it easy to copy and deploy to an EC2 instance describes an EC2 AMI. It’s possible to encrypt EBS volumes, but encryption doesn’t define them."
        },
        "8": {
            "qu": "Why might you want to use an instance store volume with your EC2 instance rather than a volume from the more common EBS service? (Select TWO)",
            "ans": {
                "a": "Instance store volumes can be encrypted.",
                "b": "Instance store volumes, data will survive an instance shutdown.",
                "c": "Instance store volumes provide faster data read/write performance.",
                "d": "Instance store volumes are connected directly to your EC2 instance."
            },
            "sol": "c, d. Instance store volumes cannot be encrypted, nor will their data survive an instance shutdown. Those are features of EBS volumes."
        },
        "9": {
            "qu": "Your web application experiences periodic spikes in demand that require the provisioning of extra instances. Which of the following pricing models would make the most sense for the “base” instances that will run constantly?",
            "ans": {
                "a": "Spot",
                "b": "On-demand",
                "c": "Spot fleet",
                "d": "Reserved"
            },
            "sol": "d. Reserved instances will work here because your “base” instances will need to run 24/7 over the long term. Spot and spot fleet instances are unreliable for this sort of usage since they can be shut down unexpectedly. On-demand instances will incur unnecessarily high costs over such a long period."
        },
        "10": {
            "qu": "Your web application experiences periodic spikes in demand that require the provisioning of extra instances. Which of the following pricing models would make the most sense for those extra instances?",
            "ans": {
                "a": "Spot",
                "b": "On-demand",
                "c": "Reserved",
                "d": "Dedicated"
            },
            "sol": "b. Spot instances are unreliable for this sort of usage since they can be shut down unexpectedly. Reserved instances make economic sense where they’ll be used 24/7 over long stretches of time. “Dedicated” isn’t a pricing model."
        },
        "11": {
            "qu": "Which of the following best describes what happens when you purchase an EC2 reserved instance?",
            "ans": {
                "a": "Charges for any instances you run matching the reserved instance type will be covered by the reservation.",
                "b": "Capacity matching the reserved definition will be guaranteed to be available whenever you request it.",
                "c": "Your account will immediately and automatically be billed for the full reservation amount.",
                "d": "An EC2 instance matching your reservation will automatically be launched in the selected AWS Region."
            },
            "sol": "a. There’s no real need for guaranteed available capacity since it’s extremely rare for AWS to run out. You choose how you’ll pay for a reserved instance. All Upfront, Partial Upfront, and No Upfront are available options, and there is no automatic billing. An instance would never be launched automatically in this context."
        },
        "12": {
            "qu": "Which of the following use cases are good candidates for spot instances? (Select TWO)",
            "ans": {
                "a": "Big data processing workloads",
                "b": "Ecommerce websites",
                "c": "Continuous integration development environments",
                "d": "Long-term, highly available, content-rich websites"
            },
            "sol": "a, c. Because spot instances can be shut down, they’re not recommended for applications that provide any kind of always-on service."
        },
        "13": {
            "qu": "Which AWS services simplify the process of bringing web applications to deployment? (Select TWO)",
            "ans": {
                "a": "Elastic Block Store",
                "b": "Elastic Compute Cloud",
                "c": "Elastic Beanstalk",
                "d": "Lightsail"
            },
            "sol": "c, d. Elastic Block Store provides storage volumes for Lightsail and Beanstalk (and for EC2, for that matter). Elastic Compute Cloud (EC2) provides application deployment, but no one ever accused it of being simple."
        },
        "14": {
            "qu": "Which of the following services bills at a flat rate regardless of how it’s consumed?",
            "ans": {
                "a": "Lightsail",
                "b": "Elastic Beanstalk",
                "c": "Elastic Compute Cloud",
                "d": "Relational Database Service"
            },
            "sol": "a. Beanstalk, EC2 (non-reserved instances), and RDS all bill according to actual usage."
        },
        "15": {
            "qu": "Which of these stacks are available from Lightsail blueprints? (Select TWO)",
            "ans": {
                "a": "Ubuntu",
                "b": "Gitlab",
                "c": "WordPress",
                "d": "LAMP"
            },
            "sol": "d, d. Ubuntu is an OS, not a stack. WordPress is an application, not an OS."
        },
        "16": {
            "qu": "Which of these AWS services use primarily EC2 resources under the hood? (Select TWO)",
            "ans": {
                "a": "Elastic Block Store",
                "b": "Lightsail",
                "c": "Elastic Beanstalk",
                "d": "Relational Database Service"
            },
            "sol": "b, c. Elastic Block Store is, for practical purposes, an EC2 resource. RDS is largely built on its own infrastructure."
        },
        "17": {
            "qu": "Which of the following AWS services are designed to let you deploy Docker containers? (Select TWO)",
            "ans": {
                "a": "Elastic Container Service",
                "b": "Lightsail",
                "c": "Elastic Beanstalk",
                "d": "Elastic Compute Cloud"
            },
            "sol": "a, c. While you could, in theory at least, manually install Docker Engine on either a Lightsail or EC2 instance, that’s not their primary function."
        },
        "18": {
            "qu": "Which of the following use container technologies? (Select TWO)",
            "ans": {
                "a": "Docker",
                "b": "Kubernetes",
                "c": "Lambda",
                "d": "Lightsail"
            },
            "sol": "a, b. Both Lambda and Lightsail are compute services that—while they might possibly make use of containers under the hood—are not themselves container technologies."
        },
        "19": {
            "qu": "What role can the Python programming language play in AWS Lambda?",
            "ans": {
                "a": "Python cannot be used for Lambda.",
                "b": "It is the primary language for API calls to administrate Lambda remotely",
                "c": "It is used as the underlying code driving the service.",
                "d": "It can be set as the runtime environment for a function."
            },
            "sol": "d. Python is, indeed, a valid choice for a function’s runtime environment. There is no one “primary” language for Lambda API calls."
        },
        "20": {
            "qu": "What is the maximum time a Lambda function may run before timing out?",
            "ans": {
                "a": "15 minutes",
                "b": "5 minutes",
                "c": "1 minute",
                "d": "1 hour"
            },
            "sol": "a. While the maximum time was, at one point, 5 minutes, that’s been changed to 15."
        }
    },
    "module-7": {
        "1": {
            "qu": "When trying to create an S3 bucket named documents, AWS informs you that the bucket name is already in use. What should you do in order to create a bucket?",
            "ans": {
                "a": "Use a different region.",
                "b": "Use a globally unique bucket name.",
                "c": "Use a different storage class.",
                "d": "Use a longer name."
            },
            "sol": "b. Bucket names must be globally unique across AWS, irrespective of Region. The length of the bucket name isn’t an issue since it’s between 3 and 63 characters long. Storage classes are configured on a per-object basis and have no impact on bucket naming."
        },
        "2": {
            "qu": "Which S3 storage classes are most cost-effective for infrequently accessed data that can’t be easily replaced? (Select TWO)",
            "ans": {
                "a": "STANDARD_IA",
                "b": "ONEZONE_IA",
                "c": "GLACIER",
                "d": "STANDARD"
            },
            "sol": "a, c. STANDARD_IA and GLACIER storage classes offer the highest levels of redundancy and are replicated across at least three Availability Zones. Due to their low level of availability (99.9 and 99.5 percent, respectively), they’re the most cost-effective for infrequently accessed data. ONEZONE_IA stores objects in only one Availability Zone, so the loss of that zone could result in the loss of all objects. The STANDARD and INTELLIGENT_TIERING classes provide the highest levels of durability and cross-zone replication but are also the least cost-effective for this use case."
        },
        "3": {
            "qu": "What are the major differences between Simple Storage Service (S3) and Elastic Block Store (EBS)? (Select TWO)",
            "ans": {
                "a": "EBS stores volumes.",
                "b": "EBS stores snapshots.",
                "c": "S3 stores volumes.",
                "d": "S3 stores objects."
            },
            "sol": "a, d. S3 is an object storage service, while EBS is a block storage service that stores volumes. EBS snapshots are stored in S3. S3 doesn’t store volumes, and EBS doesn’t store objects."
        },
        "4": {
            "qu": "Which tasks can S3 object life cycle configurations perform automatically? (Select THREE)",
            "ans": {
                "a": "Deleting old object versions",
                "b": "Moving objects to Glacier",
                "c": "Deleting old buckets",
                "d": "Deleting old objects"
            },
            "sol": "a, b, d. Object life cycle configurations can perform transition or expiration actions based on an object’s age. Transition actions can move objects between storage classes, such as between STANDARD and GLACIER. Expiration actions can delete objects and object versions. Object life cycle configurations can’t delete buckets or move objects to an EBS volume."
        },
        "5": {
            "qu": "What methods can be used to grant anonymous access to an object in S3? (Select TWO)",
            "ans": {
                "a": "Bucket policies",
                "b": "Access control lists",
                "c": "User policies",
                "d": "Security groups"
            },
            "sol": "a, b. You can use bucket policies or access control lists (ACLs) to grant anonymous users access to an object in S3. You can’t use user policies to do this, although you can use them to grant IAM principals access to objects. Security groups control access to resources in a virtual private cloud (VPC) and aren’t used to control access to objects in S3."
        },
        "6": {
            "qu": "Your budget-conscious organization has a 5 TB database file it needs to retain off-site for at least 5 years. In the event the organization needs to access the database, it must be accessible within 8 hours. Which cloud storage option should you recommend, and why? (Select TWO.)",
            "ans": {
                "a": "S3 has the most durable storage.",
                "b": "S3.",
                "c": "S3 Glacier.",
                "d": "Glacier is the most cost effective."
            },
            "sol": "c, d. Both S3 and Glacier are designed for durable, long-term storage and offer the same level of durability. Data stored in Glacier can be reliably retrieved within eight hours using the Expedited or Standard retrieval options. Data stored in S3 can be retrieved even faster than Glacier. S3 can store objects up to 5 TB in size, and Glacier can store archives up to 40 TB. Both S3 or Glacier will meet the given requirements, but Glacier is the more cost-effective solution."
        },
        "7": {
            "qu": "Which of the following actions can you perform from the S3 Glacier service console?",
            "ans": {
                "a": "Delete an archive",
                "b": "Create a vault",
                "c": "Create an archive",
                "d": "Delete a bucket"
            },
            "sol": "b. You can create or delete vaults from the Glacier service console. You can’t upload, download, or delete archives. To perform archive actions, you must use the AWS Command Line Interface, an AWS SDK, or a third-party program. Glacier doesn’t use buckets."
        },
        "8": {
            "qu": "Which Glacier retrieval option generally takes 3 to 5 hours to complete?",
            "ans": {
                "a": "Provisioned",
                "b": "Expedited",
                "c": "Bulk",
                "d": "Standard"
            },
            "sol": "d. The Standard retrieval option typically takes 3 to 5 hours to complete. Expedited takes 1 to 5 minutes, and Bulk takes 5 to 12 hours. There is no Provisioned retrieval option, but you can purchase provisioned capacity to ensure Expedited retrievals complete in a timely manner."
        },
        "9": {
            "qu": "What’s the minimum size for a Glacier archive?",
            "ans": {
                "a": "1 byte",
                "b": "40 TB",
                "c": "5 TB",
                "d": ". 0 bytes"
            },
            "sol": "a. A Glacier archive can be as small as 1 byte and as large as 40 TB. You can’t have a zerobyte archive."
        },
        "10": {
            "qu": "Which types of AWS Storage Gateway let you connect your servers to block storage using the iSCSI protocol? (Select TWO)",
            "ans": {
                "a": "Cached gateway",
                "b": "Tape gateway",
                "c": "File gateway",
                "d": "Volume gateway"
            },
            "sol": "b, d. The tape gateway and volume gateway types let you connect to iSCSI storage. The file gateway supports NFS. There’s no such thing as a cached gateway."
        },
        "11": {
            "qu": "Where does AWS Storage Gateway primarily store data?",
            "ans": {
                "a": "Glacier vaults",
                "b": "S3 buckets",
                "c": "EBS volumes",
                "d": "EBS snapshots"
            },
            "sol": "b. All AWS Storage Gateway types—file, volume, and tape gateways—primarily store data in S3 buckets. From there, data can be stored in Glacier or EBS snapshots, which can be instantiated as EBS volumes."
        },
        "12": {
            "qu": "You need an easy way to transfer files from a server in your data center to S3 without having to install any third-party software. Which of the following services and storage protocols could you use? (Select FOUR)",
            "ans": {
                "a": "AWS Storage Gateway—file gateway",
                "b": "iSCSI",
                "c": "AWS Snowball",
                "d": "SMB",
                "e": "AWS Storage Gateway—volume gateway",
                "f": "The AWS CLI"
            },
            "sol": "a, b, d, e. The AWS Storage Gateway allows transferring files from on-premises servers to S3 using industry-standard storage protocols. The AWS Storage Gateway functioning as a file gateway supports the SMB and NFS protocols. As a volume gateway, it supports the iSCSI protocol. AWS Snowball and the AWS CLI also provide ways to transfer data to S3, but using them requires installing third-party software."
        },
        "13": {
            "qu": "Which of the following are true regarding the AWS Storage Gateway—volume gateway configuration? (Select THREE)",
            "ans": {
                "a": "Stored volumes asynchronously back up data to S3 as EBS snapshots.",
                "b": "Stored volumes can be up to 32 TB in size.",
                "c": "Cached volumes locally store only a frequently used subset of data.",
                "d": "Cached volumes asynchronously back up data to S3 as EBS snapshots.",
                "e": "Cached volumes can be up to 32 TB in size."
            },
            "sol": "a, c, e. The volume gateway type offers two configurations: stored volumes and cached volumes. Stored volumes store all data locally and asynchronously back up that data to S3 as EBS snapshots. Stored volumes can be up to 16 TB in size. In contrast, cached volumes locally store only a frequently used subset of data but do not asynchronously back up the data to S3 as EBS snapshots. Cached volumes can be up to 32 TB in size."
        },
        "14": {
            "qu": "What’s the most data you can store on a single Snowball device?",
            "ans": {
                "a": "42 TB",
                "b": "50 TB",
                "c": "72 TB",
                "d": "80 TB"
            },
            "sol": "c. The 80 TB Snowball device offers 72 TB of usable storage and is the largest available. The 50 TB Snowball offers 42 TB of usable space."
        },
        "15": {
            "qu": "Which of the following are security features of AWS Snowball? (Select TWO)",
            "ans": {
                "a": "It enforces encryption at rest.",
                "b": "It uses a Trusted Platform Module (TPM) chip.",
                "c": "It enforces NFS encryption.",
                "d": "It has tamper-resistant network ports."
            },
            "sol": "a, b. AWS Snowball enforces encryption at rest and in transit. It also uses a TPM chip to detect unauthorized changes to the hardware or software. Snowball doesn’t use NFS encryption, and it doesn’t have tamper-resistant network ports."
        },
        "16": {
            "qu": "Which of the following might AWS do after receiving a damaged Snowball device from a customer?",
            "ans": {
                "a": "Copy the customer’s data to Glacier",
                "b": "Replace the Trusted Platform Module (TPM) chip",
                "c": "Securely erase the customer’s data from the device",
                "d": "Copy the customer’s data to S3"
            },
            "sol": "c. If AWS detects any signs of tampering or damage, it will not replace the TPM chip or transfer customer data from the device. Instead, AWS will securely erase it."
        },
        "17": {
            "qu": "Which of the following can you use to transfer data to AWS Snowball from a Windows machine without writing any code?",
            "ans": {
                "a": "NFS",
                "b": "The Snowball Client",
                "c": "iSCSI",
                "d": "SMB",
                "e": "The S3 SDK Adapter for Snowball"
            },
            "sol": "b. The Snowball Client lets you transfer files to or from a Snowball using a machine running Windows, Linux, or macOS. It requires no coding knowledge, but the S3 SDK Adapter for Snowball does. Snowball doesn’t support the NFS, iSCSI, or SMB storage protocols."
        },
        "18": {
            "qu": "How do the AWS Snowball and Snowball Edge devices differ? (Select TWO)",
            "ans": {
                "a": "Snowball Edge supports copying files using NFS.",
                "b": "Snowball devices can be clustered together for storage.",
                "c": "Snowball’s QSFP+ network interface supports speeds up to 40 Gbps.",
                "d": "Snowball Edge can run EC2 instances."
            },
            "sol": "a, d. Snowball Edge offers compute power to run EC2 instances and supports copying files using the NFSv3 and NFSv4 protocols. Snowball devices can’t be clustered and don’t have a QFSP+ port."
        },
        "19": {
            "qu": "Which of the following Snowball Edge device options is the best for running machine learning applications?",
            "ans": {
                "a": "Compute Optimized",
                "b": "Compute Optimized with GPU",
                "c": "Storage Optimized",
                "d": "Network Optimized"
            },
            "sol": "b. The Snowball Edge—Compute Optimized with GPU option is optimized for machine learning and high-performance computing applications. Although the Compute Optimized and Storage Optimized options could work, they aren’t the best choices. There’s no Network Optimized option."
        },
        "20": {
            "qu": "Which of the following hardware devices offers a network interface speed that supports up to 100 Gbps?",
            "ans": {
                "a": "Snowball Edge with the Storage Optimized configuration",
                "b": "Snowball Edge with the Compute Optimized configuration",
                "c": "Storage Gateway",
                "d": "80 TB Snowball"
            },
            "sol": "b. Snowball Edge with the Compute Optimized configuration includes a QSFP+ network interface that supports up to 100 Gbps. The Storage Optimized configuration has a QSFP+ port that supports only up to 40 Gbps. The 80 TB Snowball supports only up to 10 Gbps. A storage gateway is a virtual machine, not a hardware device."
        }
    },
    "module-8": {
        "1": {
            "qu": "Which type of database stores data in columns and rows?",
            "ans": {
                "a": "Nonrelational",
                "b": "Relational",
                "c": "Key-value store",
                "d": "Document"
            },
            "sol": "b. A relational database stores data in columns called attributes and rows called records. Nonrelational databases—including key-value stores and document stores—store data in collections or items but don’t use columns or rows."
        },
        "2": {
            "qu": "Which of the following Structured Query Language (SQL) statements can you use to write data to a relational database table?",
            "ans": {
                "a": "CREATE",
                "b": "INSERT",
                "c": "QUERY",
                "d": "WRITE"
            },
            "sol": "b. The SQL INSERT statement can be used to add data to a relational database. The QUERY command is used to read data. CREATE can be used to create a table but not add data to it. WRITE is not a valid SQL command."
        },
        "3": {
            "qu": "Which of the following statements is true regarding nonrelational databases?",
            "ans": {
                "a": "You can create only one table.",
                "b": "No primary key is required.",
                "c": "You can’t store data with a fixed structure.",
                "d": "You don’t have to define all the types of data that a table can store before adding data to it."
            },
            "sol": "d. A nonrelational database is schemaless, meaning that there’s no need to predefine all the types of data you’ll store in a table. This doesn’t preclude you from storing data with a fixed structure, as nonrelational databases can store virtually any kind of data. A primary key is required to uniquely identify each item in a table. Creating multiple tables is allowed, but most applications that use nonrelational databases use only one table."
        },
        "4": {
            "qu": "What is a no-SQL database?",
            "ans": {
                "a": "A nonrelational database without primary keys",
                "b": "A schemaless relational database",
                "c": "A schemaless nonrelational database",
                "d": "A relational database with primary keys"
            },
            "sol": "c. A no-SQL database is another term for a nonrelational database. By definition, nonrelational databases are schemaless and must use primary keys. There’s no such thing as a schemaless relational database. No-SQL is never used to describe a relational database of any kind."
        },
        "5": {
            "qu": "What do new Relational Database Service (RDS) instances use for database storage?",
            "ans": {
                "a": "Instance volumes",
                "b": "Elastic Block Store (EBS) volumes",
                "c": "Snapshots",
                "d": "Magnetic storage"
            },
            "sol": "b. RDS instances use EBS volumes for storage. They no longer can use magnetic storage. Instance volumes are for temporary, not database storage. You can take a snapshot of a database instance and restore it to a new instance with a new EBS volume, but an RDS instance can’t use a snapshot directly for database storage."
        },
        "6": {
            "qu": "Which of the following are database engine options for Amazon Relational Database Service (RDS)? (Select TWO)",
            "ans": {
                "a": "IBM dBase",
                "b": "PostgreSQL",
                "c": "DynamoDB",
                "d": "Amazon Aurora",
                "e": "Redis"
            },
            "sol": "b, d. PostgreSQL and Amazon Aurora are options for RDS database engines. IBM dBase and the nonrelational databases DynamoDB and Redis are not available as RDS database engines."
        },
        "7": {
            "qu": "What two databases is Amazon Aurora compatible with? (Select TWO)",
            "ans": {
                "a": "MySQL",
                "b": "PostgreSQL",
                "c": "MariaDB",
                "d": "Oracle",
                "e": "Microsoft SQL Server"
            },
            "sol": "a, b. Aurora is Amazon’s proprietary database engine that works with existing PostgreSQL and MySQL databases. Aurora doesn’t support MariaDB, Oracle, or Microsoft SQL Server."
        },
        "8": {
            "qu": "Which of the following features of Relational Database Service (RDS) can prevent data loss in the event of an Availability Zone failure? (Select TWO)",
            "ans": {
                "a": "Read replicas",
                "b": "Multi-AZ",
                "c": "Snapshots",
                "d": "IOPS",
                "e": "Vertical scaling"
            },
            "sol": "b, c. Multi-AZ and snapshots can protect your data in the event of an Availability Zone failure. Read replicas don’t use synchronous replication and may lose some data. IOPS is a measurement of storage throughput. Vertical scaling refers to changing the instance class but has nothing to do with preventing data loss."
        },
        "9": {
            "qu": "Which RDS database engine offers automatically expanding database storage up to 64 TB?",
            "ans": {
                "a": "Microsoft SQL Server",
                "b": "Amazon Aurora",
                "c": "Oracle",
                "d": "Amazon Athena"
            },
            "sol": "b. Amazon Aurora uses a shared storage volume that automatically expands up to 64 TB. The Microsoft SQL Server and Oracle database engines don’t offer this. Amazon Athena is not a database engine."
        },
        "10": {
            "qu": "Which of the following Relational Database Service (RDS) features can help you achieve a monthly availability of 99.95 percent?",
            "ans": {
                "a": "Multi-AZ",
                "b": "Read replicas",
                "c": "Point-in-time recovery",
                "d": "Horizontal scaling"
            },
            "sol": "a. Multi-AZ lets your database withstand the failure of an RDS instance, even if the failure is due to an entire Availability Zone failing. Read replicas are a way to achieve horizontal scaling to improve performance of database reads but don’t increase availability. Point-in-time recovery allows you to restore a database up to a point in time but doesn’t increase availability."
        },
        "11": {
            "qu": "What is true regarding a DynamoDB partition? (Select TWO)",
            "ans": {
                "a": "It’s stored within a table.",
                "b": "It’s backed by solid-state drives.",
                "c": "It’s a way to uniquely identify an item in a table",
                "d": "It’s replicated across multiple Availability Zones."
            },
            "sol": "b, d. A partition is an allocation of storage backed by solid-state drives and replicated across multiple Availability Zones. Tables are stored across partitions, but tables do not contain partitions. A primary key, not a partition, is used to uniquely identify an item in a table."
        },
        "12": {
            "qu": "What is the minimum monthly availability for DynamoDB in a single region?",
            "ans": {
                "a": "99.99 percent",
                "b": "99.95 percent",
                "c": "99.9 percent",
                "d": "99.0 percent"
            },
            "sol": "a. The minimum monthly availability for DynamoDB is 99.99 percent in a single Region. It’s not 99.95 percent, 99.9 percent, or 99.0 percent."
        },
        "13": {
            "qu": "Which of the following statements is true regarding a DynamoDB table?",
            "ans": {
                "a": "It can store only one data type.",
                "b": "When you create a table, you must define the maximum number of items that it can store.",
                "c": "Items in a table can have duplicate values for the primary key.",
                "d": "Items in a table don’t have to have all the same attributes."
            },
            "sol": "d. Items in a DynamoDB table can have different attributes. For example, one item can have five attributes, while another has only one. A table can store items containing multiple data types. There’s no need to predefine the number of items in a table. Items in a table can’t have duplicate primary keys."
        },
        "14": {
            "qu": "Which configuration parameters can you adjust to improve write performance against a DynamoDB table? (Select TWO)",
            "ans": {
                "a": "Decrease read capacity units (RCU)",
                "b": "Increase read capacity units",
                "c": "Increase write capacity units (WCU)",
                "d": "Decrease write capacity units",
                "e": "Enable DynamoDB Auto Scaling"
            },
            "sol": "c, e. Increasing WCU or enabling Auto Scaling will improve write performance against a table. Increasing or decreasing RCU won’t improve performance for writes. Decreasing WCU will make write performance worse."
        },
        "15": {
            "qu": "Which DynamoDB operation is the most read-intensive?",
            "ans": {
                "a": "Write",
                "b": "Query",
                "c": "Scan",
                "d": "Update"
            },
            "sol": "c. A scan requires reading every partition on which the table is stored. A query occurs against the primary key, enabling DynamoDB to read only the partition where the matching item is stored. Writing and updating an item are not read-intensive operations."
        },
        "16": {
            "qu": "Which of the following would be appropriate to use for a primary key in a DynamoDB table that stores a customer list?",
            "ans": {
                "a": "The customer’s full name",
                "b": "The customer’s phone number",
                "c": "The customer’s city",
                "d": "A randomly generated customer ID number"
            },
            "sol": "d. A primary key must be unique within a table. A full name, phone number, or city may not be unique, as some customers may share the same name or phone number. A randomly generated customer ID number would be unique and appropriate for use as a primary key."
        },
        "17": {
            "qu": "Which type of Redshift node uses magnetic storage?",
            "ans": {
                "a": "Cost-optimized",
                "b": "Dense compute",
                "c": "Dense storage",
                "d": "Dense memory"
            },
            "sol": "b. Dense compute nodes use magnetic disks. Dense storage nodes use SSDs. There are no such nodes as dense memory or cost-optimized."
        },
        "18": {
            "qu": "Which Redshift feature can analyze structured data stored in S3?",
            "ans": {
                "a": "Redshift Spectrum",
                "b": "Redshift S3",
                "c": "Amazon Athena",
                "d": "Amazon RDS"
            },
            "sol": "a. Redshift Spectrum can analyze structured data stored in S3. There is no such service as Redshift S3. Amazon Athena can analyze structured data in S3, but it’s not a feature of Redshift. Amazon RDS doesn’t analyze data stored in S3."
        },
        "19": {
            "qu": "What is the term for a relational database that stores large amounts of structured data from a variety of sources for reporting and analysis?",
            "ans": {
                "a": "Data storehouse",
                "b": "Data warehouse",
                "c": "Report cluster",
                "d": "Dense storage node"
            },
            "sol": "b. A data warehouse stores large amounts of structured data from other relational databases. It’s not called a data storehouse or a report cluster. Dense storage node is a type of Redshift compute node."
        },
        "20": {
            "qu": "What’s the maximum amount of data you can store in a Redshift cluster when using dense storage nodes?",
            "ans": {
                "a": "2 PB",
                "b": "326 TB",
                "c": "2 TB",
                "d": "326 PB",
                "e": "236 TB"
            },
            "sol": "a. Dense storage nodes can be used in a cluster to store up to 2 PB of data. Dense compute nodes can be used to store up to 326 TB of data."
        }
    },
    "module-9": {
        "1": {
            "qu": "Which of the following is not one of the pillars of the Well-Architected Framework?",
            "ans": {
                "a": "Performance efficiency",
                "b": "Reliability",
                "c": "Resiliency",
                "d": "Security",
                "e": "Cost optimization"
            },
            "sol": "c. The five pillars of the Well-Architected Framework are reliability, performance efficiency, security, cost optimization, and operational excellence. Resiliency is not one of them."
        },
        "2": {
            "qu": "Which of the following are examples of applying the principles of the security pillar of the Well-Architected Framework? (Select TWO)",
            "ans": {
                "a": "Granting each AWS user their own IAM username and password",
                "b": "Creating a security group rule to deny access to unused ports",
                "c": "Deleting an empty S3 bucket",
                "d": "Enabling S3 versioning"
            },
            "sol": "a, c. Security is about protecting the confidentiality, integrity, and availability of data. Granting each AWS user their own IAM username and password makes it possible to ensure the confidentiality of data. Enabling S3 versioning protects the integrity of data by maintaining a backup of an object. Deleting an empty S3 bucket doesn’t help with any of these. It’s not possible to create a security group rule that denies access to unused ports since security groups deny any traffic that’s not explicitly allowed."
        },
        "3": {
            "qu": "You’re hosting a web application on two EC2 instances in an Auto Scaling group. The performance of the application is consistently acceptable. Which of the following can help maintain or improve performance efficiency? (Select TWO)",
            "ans": {
                "a": "Monitoring for unauthorized access",
                "b": "Doubling the number of instances in the Auto Scaling group",
                "c": "Implementing policies to prevent the accidental termination of EC2 instances in the same Auto Scaling group",
                "d": "Using CloudFront"
            },
            "sol": "c, d. Preventing the accidental termination of an EC2 instance in the Auto Scaling group can avoid overburdening and causing performance issues on the remaining instance, especially during busy times. Using CloudFront can help improve performance for end users by caching the content in an edge location close to them. Doubling the number of instances might improve performance, but because performance is already acceptable, doing this would be inefficient. Monitoring for unauthorized access alone won’t improve performance or performance efficiency."
        },
        "4": {
            "qu": "Which of the following can help achieve cost optimization? (Select TWO)",
            "ans": {
                "a": "Deleting unused S3 objects",
                "b": "Deleting empty S3 buckets",
                "c": "Deleting unused application load balancers",
                "d": "Deleting unused VPCs"
            },
            "sol": "a, c. Deleting unused S3 objects and unused application load balancers can reduce costs since you’re charged for both. Deleting unused VPCs and empty S3 buckets won’t reduce costs since they don’t cost anything."
        },
        "5": {
            "qu": "Which of the following is a key component of operational excellence?",
            "ans": {
                "a": "Adding more security personnel",
                "b": "Automating manual processes",
                "c": "Making minor improvements to bad processes",
                "d": "Making people work longer hours"
            },
            "sol": "b. Operational excellence is concerned with strengthening the other four pillars of reliability, performance efficiency, security, and cost optimization; automation is the key to achieving each of these. Improving bad processes and making people work longer hours run counter to achieving operational excellence. Adding more security personnel may be a good idea, but it isn’t a key component of operational excellence."
        },
        "6": {
            "qu": "Your default VPC in the us-west-1 Region has three default subnets. How many Availability Zones are in this Region?",
            "ans": {
                "a": "2",
                "b": "3",
                "c": "4",
                "d": "5"
            },
            "sol": "b. In a default VPC, AWS creates a subnet for each Availability Zone in the Region. Hence, if there are three subnets in the default VPC, there must be three Availability Zones."
        },
        "7": {
            "qu": "Your organization is building a database-backed web application that will sit behind an application load balancer. You add an inbound security group rule to allow HTTP traffic on TCP port 80. Where should you apply this security group to allow users to access the application?",
            "ans": {
                "a": "The application load balancer listener",
                "b": "The database instance",
                "c": "The subnets where the instances reside",
                "d": "None of these"
            },
            "sol": "a. Application load balancer listeners use security groups to control inbound access, so you need to apply a security group that has an inbound rule allowing HTTP access. Applying the security group rule to the database instance won’t help, since users don’t connect directly to the database instance. You can’t apply a security group to a subnet, only a network access control list."
        },
        "8": {
            "qu": "How does an application load balancer enable reliability?",
            "ans": {
                "a": "By routing traffic away from failed instances",
                "b": "By replacing failed instances",
                "c": "By routing traffic to the least busy instances",
                "d": "By caching frequently accessed content"
            },
            "sol": "a. An application load balancer can use health checks to identify failed instances and remove them from load balancing. This can prevent a user from ever reaching a failed instance. A load balancer can’t replace a failed instance, but Auto Scaling can. An application load balancer distributes traffic to instances using a round-robin algorithm, not based on how busy those instances are. An application load balancer doesn’t cache content."
        },
        "9": {
            "qu": "Which of the following contains the configuration information for instances in an Auto Scaling group?",
            "ans": {
                "a": "Launch directive",
                "b": "Dynamic scaling policy",
                "c": "CloudFormation template",
                "d": "Launch template"
            },
            "sol": "d. A launch template tells Auto Scaling how to configure the instances it provisions. A dynamic scaling policy controls how Auto Scaling scales in and out based on CloudWatch metrics. There’s no such thing as a launch directive. Auto Scaling does not reference a CloudFormation template, but you can use a CloudFormation template to create a stack that contains a launch template."
        },
        "10": {
            "qu": "You’ve created a target tracking policy for an Auto Scaling group. You want to ensure that the number of instances in the group never exceeds 5. How can you accomplish this?",
            "ans": {
                "a": "Set the group size to 5.",
                "b": "Set the maximum group size to 5.",
                "c": "Set the minimum group size to 5.",
                "d": "Delete the target tracking policy."
            },
            "sol": "b. The maximum group size limits the number of instances in the group. Setting the group size (also known as the desired capacity) or minimum group size to 5 would increase the number of instances to 5 but would not stop Auto Scaling from subsequently adding more instances. Deleting the target tracking policy would not necessarily prevent the number of instances in the group from growing, as another process such as a scheduled scaling policy could add more instances to the group."
        },
        "11": {
            "qu": "Which of the following is an example of a static website?",
            "ans": {
                "a": "A WordPress blog",
                "b": "A website hosted on S3",
                "c": "A popular social media website",
                "d": "A web-based email application"
            },
            "sol": "b. A static website serves content just as it’s stored without changing the content on the fly. A WordPress blog, a social media website, and a web-based email application all compile content from a database and mix it in with static content before serving it up to the user."
        },
        "12": {
            "qu": "Which of the following features of S3 improve the security of data you store in an S3 bucket? (Select TWO)",
            "ans": {
                "a": "Objects in S3 are not public by default.",
                "b": "All objects are readable by all AWS users by default.",
                "c": "By default, S3 removes ACLs that allow public read access to objects.",
                "d": "S3 removes public objects by default."
            },
            "sol": "a, c. Objects you upload to an S3 bucket are not public by default, nor are they accessible to all AWS users. Even if you try to make an object public using an ACL, S3 will immediately remove the ACL, but you can disable this behavior. S3 never removes objects by default."
        },
        "13": {
            "qu": "Which of the following is required to enable S3 static website hosting on a bucket?",
            "ans": {
                "a": "Enable bucket hosting in the S3 service console.",
                "b": "Disable default encryption.",
                "c": "Disable object versioning.",
                "d": "Enable object versioning.",
                "e": "Make all objects in the bucket public."
            },
            "sol": "a. To have S3 host your static website, you need to enable bucket hosting in the S3 service console. It’s not necessary to disable or enable default encryption or object versioning. There’s also no need to make all objects in the bucket public, but only those that you want S3 to serve up."
        },
        "14": {
            "qu": "You’ve created a static website hosted on S3 and given potential customers the URL that consists of words and numbers. They’re complaining that it’s too hard to type in. How can you come up with a friendlier URL?",
            "ans": {
                "a": "Re-create the bucket using only words in the name.",
                "b": "Use a custom domain name.",
                "c": "Re-create the bucket in a different Region.",
                "d": "Re-create the bucket using only numbers in the name."
            },
            "sol": "b. Purchasing and using a custom domain name is the best option for a friendly URL. You need to name the bucket the same as the domain name. Creating a bucket name with only words is unlikely to work, regardless of Region, as bucket names must be globally unique. A bucket name can’t start with a number."
        },
        "15": {
            "qu": "Which of the following is true regarding static websites hosted in S3?",
            "ans": {
                "a": "The content served is not encrypted in transit.",
                "b": "Anyone can modify the content.",
                "c": "You must use a custom domain name.",
                "d": "A website hosted on S3 is stored in multiple Regions."
            },
            "sol": "a. Websites hosted in S3 are served using unencrypted HTTP, not secure HTTPS. The content is publicly readable, but that doesn’t mean the public can modify it. You don’t have to use a custom domain name, as S3 provides an endpoint URL for you. A website hosted in S3 is stored in a bucket, and a bucket exists in only one Region."
        },
        "16": {
            "qu": "Which of the following can impact the reliability of a web application running on EC2 instances?",
            "ans": {
                "a": "Taking EBS snapshots of the instances.",
                "b": "The user interface is too difficult to use.",
                "c": "Not replacing a misconfigured resource that the application depends on.",
                "d": "Provisioning too many instances."
            },
            "sol": "c. The reliability of an application can be impacted by the failure of resources the application depends on. One way a resource can fail is if it’s misconfigured. Taking EBS snapshots of an instance or provisioning more instances than you need won’t impact reliability. The user interface being difficult to use might be an annoyance for the user but doesn’t affect the actual reliability of the application."
        },
        "17": {
            "qu": "You have a public web application running on EC2 instances. Which of the following factors affecting the performance of your application might be out of your control?",
            "ans": {
                "a": "Storage",
                "b": "Computer",
                "c": "Network",
                "d": "Database"
            },
            "sol": "c. You may have control over your VPC, but the rest of the network between your application and users on the internet is not under your control. Compute, storage, and any database your application uses are, or at least theoretically could be, under your control."
        },
        "18": {
            "qu": "An Auto Scaling group can use an EC2 system health check to determine whether an instance is healthy. What other type of health check can it use?",
            "ans": {
                "a": "S3",
                "b": "SNS",
                "c": "VPC",
                "d": "ELB"
            },
            "sol": "d. An Auto Scaling group can use an ELB health check to determine whether an instance is healthy. There is no such thing as an S3 health check, a VPC health check, or an SNS health check."
        },
        "19": {
            "qu": "You’re hosting a static website on S3. Your web assets are stored under the Standard storage class. Which of the following is true regarding your site?",
            "ans": {
                "a": "Someone may modify the content of your site without authorization.",
                "b": "You’re responsible for S3 charges.",
                "c": "You’re charged for any compute power used to host the site.",
                "d": "An Availability Zone outage may bring down the site."
            },
            "sol": "b. You’re responsible for S3 charges related to your static website. You’re not charged for compute with S3. No one may modify the content of your site unless you give them permission. The S3 Standard storage class keeps objects in multiple Availability Zones, so the outage of one won’t affect the site."
        },
        "20": {
            "qu": "You’re hosting a static website on S3. Your web assets are stored in the US East 1 Region in the bucket named mygreatwebsite. What is the URL of the website?",
            "ans": {
                "a": "http://mygreatwebsite.s3-website-us- east-1.amazonaws.com",
                "b": "http://mygreatwebsite.s3. amazonaws.com",
                "c": "http://mygreatwebsite.s3-website-us- east.amazonaws.com",
                "d": "http://mygreatwebsite.s3-us- east-1.amazonaws.com"
            },
            "sol": "a. The format of the URL is the bucket name, followed by s3-website-, the Region identifier, and then amazonaws.com."
        }
    },
    "module-10": {
        "1": {
            "qu": "Which of the following is an advantage of using CloudFormation?",
            "ans": {
                "a": "It uses the popular Python programming language.",
                "b": "It prevents unauthorized manual changes to resources.",
                "c": "It lets you create multiple separate AWS environments using a single template.",
                "d": "It can create resources outside of AWS."
            },
            "sol": "c. CloudFormation can create AWS resources and manages them collectively in a stack. Templates are written in the CloudFormation language, not Python. CloudFormation can’t create resources outside of AWS. It also doesn’t prevent manual changes to resources in a stack."
        },
        "2": {
            "qu": "What formats do CloudFormation templates support? (Select TWO)",
            "ans": {
                "a": "XML",
                "b": "YAML",
                "c": "HTML",
                "d": "JSON"
            },
            "sol": "b, d. CloudFormation templates are written in the YAML or JSON format."
        },
        "3": {
            "qu": "What’s an advantage of using parameters in a CloudFormation template?",
            "ans": {
                "a": "Allow customizing a stack without changing the template.",
                "b": "Prevent unauthorized users from using a template.",
                "c": "Prevent stack updates.",
                "d": "Allow multiple stacks to be created from the same template."
            },
            "sol": "a. Parameters let you input customizations when creating a CloudFormation stack without having to modify the underlying template. Parameters don’t prevent stack updates or unauthorized changes. A template can be used to create multiple stacks, regardless of whether it uses parameters."
        },
        "4": {
            "qu": "Why would you use CloudFormation to automatically create resources for a development environment instead of creating them using AWS CLI commands? (Select TWO)",
            "ans": {
                "a": "Resources CloudFormation creates are organized into stacks and can be managed as a single unit.",
                "b": "CloudFormation stack updates help ensure that changes to one resource won’t break another.",
                "c": "Resources created by CloudFormation always work as expected.",
                "d": "CloudFormation can provision resources faster than the AWS CLI."
            },
            "sol": "a, b. Resources CloudFormation creates are organized into stacks. When you update a stack, CloudFormation analyzes the relationships among resources in the stack and updates dependent resources as necessary. This does not, however, mean that any resource you create using CloudFormation will work as you expect. Provisioning resources using CloudFormation is not necessarily faster than using the AWS CLI."
        },
        "5": {
            "qu": "What are two features of CodeCommit? (Select TWO)",
            "ans": {
                "a": "Versioning",
                "b": "Automatic deployment",
                "c": "Differencing",
                "d": "Manual deployment"
            },
            "sol": "a, c. CodeCommit is a private Git repository that offers versioning and differencing. It does not perform deployments."
        },
        "6": {
            "qu": "In the context of CodeCommit, what can differencing accomplish?",
            "ans": {
                "a": "Allowing reverting to an older version of a file",
                "b": "Understanding what code change introduced a bug",
                "c": "Deleting duplicate lines of code",
                "d": "Seeing when an application was last deployed"
            },
            "sol": "b. Differencing lets you see the differences between two versions of a file, which can be useful when figuring out what change introduced a bug. Versioning, not differencing, is what allows reverting to an older version of a file. Differencing doesn’t identify duplicate lines of code or tell you when an application was deployed."
        },
        "7": {
            "qu": "What software development practice regularly tests new code for bugs but doesn’t do anything else?",
            "ans": {
                "a": "Differencing",
                "b": "Continuous deployment",
                "c": "Continuous delivery",
                "d": "Continuous integration"
            },
            "sol": "d. Continuous integration is the practice of running code through a build or test process as soon as it’s checked into a repository. Continuous delivery and continuous deployment include continuous integration but add deployment to the process. Differencing only shows the differences between different versions of a file but doesn’t perform any testing."
        },
        "8": {
            "qu": "Which CodeBuild build environment compute types support Windows operating systems? (Select TWO)",
            "ans": {
                "a": "build.general2.large",
                "b": "build.general1.medium",
                "c": "build.general1.small",
                "d": "build.general1.large",
                "e": "build.windows1.small"
            },
            "sol": "b, d. Build.general1.medium and build.general1.large support Windows and Linux operating systems. Build.general1.small supports Linux only. The other compute types don’t exist."
        },
        "9": {
            "qu": "What does a CodeBuild environment always contain? (Select TWO)",
            "ans": {
                "a": "An operating system",
                "b": "A Docker image",
                "c": "The Python programming language",
                "d": ".NET Core",
                "e": "The PHP programming language"
            },
            "sol": "a, b. A CodeBuild build environment always contains an operating system and a Docker image. It may contain the other components but doesn’t have to."
        },
        "10": {
            "qu": "Which of the following can CodeDeploy do? (Select THREE)",
            "ans": {
                "a": "Deploy an application to an on-premises Windows instance",
                "b": "Deploy a Docker container to the Elastic Container Service.",
                "c": "Upgrade an application on an EC2 instance running Red Hat Enterprise Linux.",
                "d": "Deploy an application to an Android smartphone.",
                "e": "Deploy a website to an S3 bucket."
            },
            "sol": "a, b, c. CodeDeploy can deploy application files to Linux or Windows EC2 instances and Docker containers to ECS. It can’t deploy an application to smartphones, and it can’t deploy files to an S3 bucket."
        },
        "11": {
            "qu": "What is the minimum number of actions in a CodePipeline pipeline?",
            "ans": {
                "a": "1",
                "b": "2",
                "c": "3",
                "d": "4",
                "e": "0"
            },
            "sol": "b. At the very least, a CodePipeline must consist of a source stage and a deploy stage."
        },
        "12": {
            "qu": "You want to predefine the configuration of EC2 instances that you plan to launch manually and using Auto Scaling. What resource must you use?",
            "ans": {
                "a": "CloudFormation template",
                "b": "Instance role",
                "c": "Launch configuration",
                "d": "Launch template"
            },
            "sol": "d. A launch template can be used to launch instances manually and with EC2 Auto Scaling. A launch configuration can’t be used to launch instances manually. An instance role is used to grant permissions to applications running on an instance. Auto Scaling can’t provision instances using a CloudFormation template."
        },
        "13": {
            "qu": "What Auto Scaling group parameters set the limit for the number of instances that Auto Scaling creates? (Select TWO)",
            "ans": {
                "a": "Maximum",
                "b": "Group size",
                "c": "Desired capacity",
                "d": "Minimum"
            },
            "sol": "a, d. The maximum and minimum group size values limit the number of instances in an Auto Scaling group. The desired capacity (also known as the group size) is the number of instances that Auto Scaling will generally maintain, but Auto Scaling can launch or terminate instances if dynamic scaling calls for it."
        },
        "14": {
            "qu": "An Auto Scaling group has a desired capacity of 7 and a maximum size of 7. What will Auto Scaling do if someone manually terminates one of these instances?",
            "ans": {
                "a": "It will not launch any new instances.",
                "b": "It will launch one new instance.",
                "c": "It will terminate one instance.",
                "d": "It will change the desired capacity to 6."
            },
            "sol": "b. Auto Scaling will use self-healing to replace the failed instance to maintain the desired capacity of 7. Terminating an instance or failing to replace the failed one will result in 6 instances. Auto Scaling won’t ever change the desired capacity in response to a failed instance."
        },
        "15": {
            "qu": "What Auto Scaling feature creates a scaling schedule based on past usage patterns?",
            "ans": {
                "a": "Predictive scaling",
                "b": "Scheduled scaling",
                "c": "Dynamic scaling",
                "d": "Pattern scaling"
            },
            "sol": "a. Predictive scaling creates a scheduled scaling action based on past usage patterns. Scheduled scaling and dynamic scaling do not create scheduled scaling actions. There is no such thing as pattern scaling."
        },
        "16": {
            "qu": "What type of AWS Systems Manager document can run Bash or PowerShell scripts on an EC2 instance?",
            "ans": {
                "a": "Run document",
                "b": "Command document",
                "c": "Automation document",
                "d": "Script document"
            },
            "sol": "b. A Command document can execute commands on an EC2 instance. An Automation document can perform administrative tasks on AWS, such as starting or stopping an instance. There is no such thing as a Script document or a Run document."
        },
        "17": {
            "qu": "What type of AWS Systems Manager document can take a snapshot of an EC2 instance?",
            "ans": {
                "a": "Command document",
                "b": "Run document",
                "c": "Script document",
                "d": "Automation document"
            },
            "sol": "d. An Automation document can perform administrative tasks on AWS, such as starting or stopping an instance. A Command document can execute commands on an EC2 instance. There is no such thing as a Script document or a Run document."
        },
        "18": {
            "qu": "Which of the following OpsWorks services uses Chef recipes?",
            "ans": {
                "a": "AWS OpsWorks for Puppet Enterprise",
                "b": "AWS OpsWorks Stacks",
                "c": "AWS OpsWorks Layers",
                "d": "AWS OpsWorks for Automation"
            },
            "sol": "b. AWS OpsWorks Stacks uses Chef recipes, while AWS OpsWorks for Puppet Enterprise uses Puppet modules. There is no service called AWS OpsWorks Layers or AWS OpsWorks for Automation."
        },
        "19": {
            "qu": "What configuration management platforms does OpsWorks support? (Select TWO)",
            "ans": {
                "a": "SaltStack",
                "b": "Puppet Enterprise",
                "c": "CFEngine",
                "d": "Chef",
                "e": "Ansible"
            },
            "sol": "b, d. OpsWorks supports the Puppet Enterprise and Chef configuration management platforms. It doesn’t support SaltStack, Ansible, or CFEngine."
        },
        "20": {
            "qu": "Which of the following OpsWorks Stacks layers contains at least one EC2 instance?",
            "ans": {
                "a": "EC2 Auto Scaling layer",
                "b": "Elastic Container Service (ECS) cluster layer",
                "c": "OpsWorks layer",
                "d": "Relational Database Service (RDS) layer",
                "e": "Elastic Load Balancing (ELB) layer"
            },
            "sol": "c. Only an OpsWorks layer contains at least one EC2 instance. There’s no such thing as an EC2 Auto Scaling layer."
        }
    }
}